# 应用服务 WEB 访问端口
server:
  port: 8083

spring:
  cloud:
    config:
      uri: ${CONFIG_SERVER_URL:http://localhost:8888}
      fail-fast: false

    loadbalancer:
      retry:
        enabled: true  # 启用重试机制，提升服务可用性

  application:
    name: order-service  # 微服务名称，Eureka 中展示的服务名

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  h2:
    console:
      enabled: true
      path: /h2-console

  datasource:
    url: jdbc:h2:mem:testdb;
    driver-class-name: org.h2.Driver
    username: sa
    password: password

  sql:
    init:
      schema-locations: classpath:schema.sql
#      data-locations: classpath:data.sql
      mode: always
      continue-on-error: true

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka/}   # Eureka Server 的地址
    #        register-with-eureka: true  # Register gateway service with Eureka
    #        fetch-registry: true  # Fetch service registry to route requests
    #        registry-fetch-interval-seconds: 30  # 从 Eureka 服务器获取注册信息的间隔时间（秒），默认值通常是 30
    #        instance-info-replication-interval-seconds: 40  # 实例信息复制到其他 Eureka 服务器的间隔时间（秒），默认值通常是 40
    #    lease:
    #      duration: 90  # 实例在 Eureka 服务器上的租约到期时间（秒），在到期前没有收到心跳，Eureka 将从注册表中移除该实例
    #      renewal-interval-in-seconds: 30  # 实例发送心跳到 Eureka 服务器的间隔时间（秒），默认值是租约到期时间的三分之一

    #    registry-fetch-interval-seconds: 30
    register-with-eureka: true  # 是否将自己注册到Eureka服务器，默认为true
    fetch-registry: true  # 是否从Eureka服务器获取注册信息，默认为true
  #    instance-info-replication-interval-seconds: 10  # 间隔多久（秒）向Eureka服务器发送一次心跳，默认为30秒
  #    initial-instance-info-replication-interval-seconds: 5  # 初始向Eureka服务器发送心跳的间隔时间，默认为40秒
  #        lease-renewal-interval-in-seconds: 5  # 服务续约间隔时间，默认为30秒
  #        lease-expiration-duration-in-seconds: 90  # 服务租约到期时间，默认为90秒